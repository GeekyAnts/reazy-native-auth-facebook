{"version":3,"sources":["../../../src/generators/remove/index.js"],"names":["generators","require","fs","path","transform","removeService","filename","name","moduleName","existsSync","content","readFileSync","toString","replace","writeFileSync","encoding","deleteEnvFile","unlinkSync","unlinkIOS","projName","fileContents","err","console","log","unlinkAndroid","module","exports","Base","extend","constructor","apply","arguments","initializing","pkg","readJSON","destinationPath","process","exit","props","cwd","split","sep","pop","writing","appJsPath","envPath","envExamplePath","iosProjPath","androidBuildGradlePath","spawnCommandSync"],"mappings":"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","file":"index.js","sourcesContent":["var generators = require('yeoman-generator');\nvar fs = require('fs');\nvar path = require('path');\nvar transform = require('../../lib/transform');\n\nfunction removeService(filename, name, moduleName) {\n  if (fs.existsSync(filename)) {\n    let content = fs.readFileSync(filename).toString();\n\n    content = content.replace('import ' + name + ' from \\'' + moduleName + '\\';\\n', '');\n    content = content.replace('app.use(' + name + '(), \\'config\\');\\n', '');\n\n    fs.writeFileSync(filename, content, {encoding: 'utf8'});\n  }\n}\n\nfunction deleteEnvFile(filename) {\n  if (fs.existsSync(filename)) {\n    fs.unlinkSync(filename);\n  }\n}\n\nfunction unlinkIOS(filename, projName) {\n  if (fs.existsSync(filename)) {\n    let fileContents = fs.readFileSync(filename, {encoding: 'utf8'});\n    fileContents = fileContents.replace('INFOPLIST_OTHER_PREPROCESSOR_FLAGS = \"-traditional\";', '');\n    fileContents = fileContents.replace('INFOPLIST_PREFIX_HEADER = \"${CONFIGURATION_BUILD_DIR}/GeneratedInfoPlistDotEnv.h\";', '');\n    fileContents = fileContents.replace('INFOPLIST_PREPROCESS = YES;', '');\n    try {\n      fs.writeFileSync(filename, fileContents, {encoding: 'utf8'});\n    } catch(err) {\n      console.log('err', err);\n    }\n  } else {\n    console.log('Make sure that the iOS project exists and the name in package.json matches the iOS project name');\n  }\n}\n\nfunction unlinkAndroid(filename) {\n  if (fs.existsSync(filename)) {\n    let fileContents = fs.readFileSync(filename, {encoding: 'utf8'});\n\n    fileContents = fileContents.replace(`apply from: project(':react-native-config').projectDir.getPath() + \"/dotenv.gradle\"`, '');\n\n    fs.writeFileSync(filename, fileContents, {encoding: 'utf8'});\n  } else {\n    console.log('Make sure that the Android project exists');\n  }\n}\n\nmodule.exports = generators.Base.extend({\n  constructor: function () {\n    generators.Base.apply(this, arguments);\n  },\n\n  initializing: function () {\n    // const done = this.async();\n\n    this.pkg = this.fs.readJSON(this.destinationPath('package.json'), {});\n    if (!this.pkg || !this.pkg.name) {\n      this.log('Please run this command in the root of a Reazy project');\n      process.exit(1);\n    }\n\n    this.props = {\n      name: this.pkg.name || process.cwd().split(path.sep).pop()\n    };\n\n  },\n\n  writing: function () {\n    const appJsPath = this.destinationPath('src/app.js');\n    const envPath = this.destinationPath('.env');\n    const envExamplePath = this.destinationPath('.env.example');\n    const iosProjPath = this.destinationPath('ios', this.props.name + '.xcodeproj', 'project.pbxproj');\n    const androidBuildGradlePath = this.destinationPath('android/app/build.gradle');\n\n\n    this.spawnCommandSync('react-native', ['unlink', 'react-native-config']);\n    this.log('Uninstalling react-native-config...');\n    this.spawnCommandSync('npm', ['uninstall', '--save', 'react-native-config']);\n    unlinkIOS(iosProjPath, this.props.name);\n    unlinkAndroid(androidBuildGradlePath);\n\n    // Automatically import the new service into services/index.js and initialize it.\n    removeService(appJsPath, 'reazyNativeConfig', 'reazy-native-config');\n    deleteEnvFile(envPath);\n    deleteEnvFile(envExamplePath);\n  }\n});\n"]}